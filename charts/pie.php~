/**
 * Radar-ish Chart
 *
 * @version 0.1
 * @package BTWP
 * @author danja
 *
 */
<?php

$values = array(5,2,10,4,7);

$outputFile = "/home/danny/wordpress/WordPress/charts/images/test_pie.png";

// $values = array(10,10,10,10,10);

$sectorCount = count($values);

$diameter = 400;
$radius = $diameter/2;
$angle = 360/$sectorCount;

// init image
$image = imagecreatetruecolor($diameter, $diameter);

// set up color constants
$white    = imagecolorallocate($image, 0xFF, 0xFF, 0xFF);

$darkred  = imagecolorallocate($image, 0x90, 0x00, 0x00);
$red      = imagecolorallocate($image, 0xFF, 0x00, 0x00);
$lightred = imagecolorallocate($image, 0xFF, 0x90, 0x90);

$darkgreen  = imagecolorallocate($image, 0x00, 0x90, 0x00);
$green      = imagecolorallocate($image, 0x00, 0xFF, 0x00);
$lightgreen = imagecolorallocate($image, 0x90, 0xFF, 0x90);

$darkblue  = imagecolorallocate($image, 0x00, 0x00, 0x90);
$blue      = imagecolorallocate($image, 0x00, 0x00, 0xFF);
$lightblue = imagecolorallocate($image, 0x90, 0x90, 0xFF);

$darkyellow  = imagecolorallocate($image, 0x90, 0x90, 0x00);
$yellow      = imagecolorallocate($image, 0xFF, 0xFF, 0x00);
$lightyellow = imagecolorallocate($image, 0xFF, 0xFF, 0x90);

$darkcyan   = imagecolorallocate($image, 0x00, 0x90, 0x90);
$cyan       = imagecolorallocate($image, 0x00, 0xFF, 0xFF);
$lightcyan  = imagecolorallocate($image, 0x90, 0xFF, 0xFF);

$darkmagenta   = imagecolorallocate($image, 0x90, 0x00, 0x90);
$magenta       = imagecolorallocate($image, 0xFF, 0x00, 0xFF);
$lightmagenta  = imagecolorallocate($image, 0xFF, 0x90, 0xFF);

$darkgray   = imagecolorallocate($image, 0x90, 0x90, 0x90);
$gray       = imagecolorallocate($image, 0xC0, 0xC0, 0xC0);
$lightgray  = imagecolorallocate($image, 0xE0, 0xE0, 0xE0);

$colors = array (
   array($darkred, $red, $lightred),
   array($darkgreen, $green, $lightgreen),
   array($darkblue, $blue, $lightblue),
   array($darkyellow, $yellow, $lightyellow),
   array($darkcyan, $cyan, $lightcyan),
   array($darkmagenta, $magenta, $lightmagenta),
   array($darkgray, $gray, $lightgray)
);

// set background
imagecolortransparent($image, $white);
imagefill($image, 0, 0, $white);

// bool imagefilledarc ( resource $image , int $cx , int $cy , int $width , int $height , int $start , int $end , int $color , int $style )

// step through values and render sectors
for ($i = 0; $i < $sectorCount; $i++) {
   $value = $radius * $values[$i]/5;

// high values
   if($values[$i]/10 > 2/3) {
      imagefilledarc($image, $radius, $radius, $value, $value, $i * $angle, ($i+1) * $angle, $colors[$i][2], IMG_ARC_PIE);
      imagefilledarc($image, $radius, $radius, $diameter*2/3, $diameter*2/3, $i * $angle, ($i+1) * $angle, $colors[$i][1], IMG_ARC_PIE);
      imagefilledarc($image, $radius, $radius, $diameter/3, $diameter/3, $i * $angle, ($i+1) * $angle, $colors[$i][0], IMG_ARC_PIE);
   }
// medium values
   if(($values[$i]/10 > 1/3) && ($values[$i]/10 < 2/3)) {
      imagefilledarc($image, $radius, $radius, $value, $value, $i * $angle, ($i+1) * $angle, $colors[$i][1], IMG_ARC_PIE);
      imagefilledarc($image, $radius, $radius, $diameter/3, $diameter/3, $i * $angle, ($i+1) * $angle, $colors[$i][0], IMG_ARC_PIE);
   } 
// low values
   if($values[$i]/10 < 1/3) {
      imagefilledarc($image, $radius, $radius, $value, $value, $i * $angle, ($i+1) * $angle, $colors[$i][0], IMG_ARC_PIE);
   }
}

ob_clean(); // flush buffer

// display image on page - for debugging
header('Content-type: image/png');
imagepng($image);

// save image file
imagepng($image, $outputFile);

// cleanup
imagedestroy($image);
?>

